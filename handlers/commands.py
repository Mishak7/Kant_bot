from aiogram import Router, types, F
from aiogram.filters import CommandStart
from config.logger import logger
from handlers.keyboard import main_roots_keyboard, info_keyboard
import traceback
from aiogram.types import FSInputFile
import os
router = Router()

@router.message(CommandStart())
async def send_welcome(message: types.Message):
    try:
        logger.info(f'User {message.from_user.id} started bot')
        await message.answer('–ü—Ä–∏–≤–µ—Ç! –° —á–µ–º –ø–æ–º–æ—á—å?', reply_markup=main_roots_keyboard())
    except Exception as e:
        logger.error(f'Welcome error: {e}\n{traceback.format_exc()}')
        raise

# –•—ç–Ω–¥–ª–µ—Ä –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø—Ä–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç
@router.message(F.text == "üéì–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç")
async def university_info(message: types.Message):
    text = "üéì –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ"
    await message.answer(text,
                         reply_markup=info_keyboard(),
                         parse_mode="Markdown")

@router.message(F.text == "üìç–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–æ—Ä–ø—É—Å–∞")
async def location_info(message: types.Message):
    text = """üìç *–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–æ—Ä–ø—É—Å–æ–≤*

‚Ä¢ –ì–ª–∞–≤–Ω—ã–π –∫–æ—Ä–ø—É—Å: [–∞–¥—Ä–µ—Å –∏ –∫–∞—Ä—Ç–∞]
‚Ä¢ –ö–æ—Ä–ø—É—Å –ê: [–∞–¥—Ä–µ—Å –∏ –∫–∞—Ä—Ç–∞] 
‚Ä¢ –ö–æ—Ä–ø—É—Å –ë: [–∞–¥—Ä–µ—Å –∏ –∫–∞—Ä—Ç–∞]
‚Ä¢ –°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –∫–æ–º–ø–ª–µ–∫—Å: [–∞–¥—Ä–µ—Å –∏ –∫–∞—Ä—Ç–∞]"""

    await message.answer(text, parse_mode="Markdown")



@router.message(F.text == "üèòÔ∏è–û–±—â–µ–∂–∏—Ç–∏—è")
async def dormitory_info(message: types.Message):

    await message.reply_document(document=FSInputFile("handlers/info_files/–û–ë–©–ï–ñ–ò–¢–ò–ï.pdf"),
                                 caption="–ß—Ç–æ–±—ã –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π, –æ—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–Ω—ã–π –Ω–∏–∂–µ —Ñ–∞–π–ª.")


@router.message(F.text == "üè•–ú–µ–¥—Ü–µ–Ω—Ç—Ä")
async def medical_center_info(message: types.Message):
    text = """üè• *–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∏–π —Ü–µ–Ω—Ç—Ä*

‚Ä¢ –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: –ø–Ω-–ø—Ç 9:00-18:00
‚Ä¢ –¢–µ–ª–µ—Ñ–æ–Ω: +7 (XXX) XXX-XX-XX
‚Ä¢ –£—Å–ª—É–≥–∏: –ø–µ—Ä–≤–∞—è –ø–æ–º–æ—â—å, –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
‚Ä¢ –ó–∞–ø–∏—Å—å –Ω–∞ –ø—Ä–∏–µ–º"""

    await message.answer(text, parse_mode="Markdown")


@router.message(F.text == "‚ö†Ô∏è–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Å–∏—Ç—É–∞—Ü–∏–∏")
async def emergency_info(message: types.Message):
    text = ''
    await message.answer(text, parse_mode="Markdown")


@router.message(F.text == "üá∑üá∫–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞")
async def language_check_info(message: types.Message):
    text = """üá∑üá∫ *–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞*

–ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ:
‚Ä¢ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –¥–ª—è –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
‚Ä¢ –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –∫—É—Ä—Å–∞—Ö
‚Ä¢ –†–∞—Å–ø–∏—Å–∞–Ω–∏–∏ —ç–∫–∑–∞–º–µ–Ω–æ–≤
‚Ä¢ –ö–æ–Ω—Ç–∞–∫—Ç–∞—Ö —è–∑—ã–∫–æ–≤–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞"""

    await message.answer(text, parse_mode="Markdown")


@router.message()
async def unknown_command(message: types.Message):
    await message.reply('–†–∞–∑–¥–µ–ª –Ω–µ –Ω–∞–π–¥–µ–Ω.\n–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª:', reply_markup=main_roots_keyboard())